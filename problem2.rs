// Each new term in the Fibonacci sequence is generated by adding the
// previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values
// do not exceed four million, find the sum of the even-valued terms.

const LIMIT: u32 = 4_000_000;

fn problem2() -> u32 {
    let mut fib = vec![1, 2];
    let mut sum = 2;
    loop {
        let next = fib[fib.len() - 1] + fib[fib.len() - 2];
        if next > LIMIT {
            break;
        }
        fib.push(next);
        if next % 2 == 0 {
            sum += next;
        }
    }

    return sum;
}

fn main() {
    println!("{}", problem2());
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_problem2() {
        assert_eq!(problem2(), 4613732);
    }
}
